"use strict";(self.webpackChunkdoc_for_c_2_c_widget=self.webpackChunkdoc_for_c_2_c_widget||[]).push([[6871],{2043:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var o=e(4848),r=e(8453);const s={},i="Using the C2C Widget with React",d={id:"usage/with_react",title:"Using the C2C Widget with React",description:"Of course, you need to have a different component which creates a button with the buttonId attribute. Eg:",source:"@site/docs/usage/with_react.mdx",sourceDirName:"usage",slug:"/usage/with_react",permalink:"/temp-c2c-widget/usage/with_react",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Usage",permalink:"/temp-c2c-widget/usage/"},next:{title:"Using the C2C Widget with Webflow",permalink:"/temp-c2c-widget/usage/with_webflow"}},u={},a=[];function c(n){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"using-the-c2c-widget-with-react",children:"Using the C2C Widget with React"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import { useRef, useEffect } from "react";\nimport BrowserOnly from "@docusaurus/BrowserOnly";\n\nexport default function C2CWidgetInternal({\n  buttonId,\n  destination,\n  supportsVideo,\n  supportsAudio,\n  token,\n}: {\n  buttonId: string;\n  destination: string;\n  supportsVideo: boolean;\n  supportsAudio: boolean;\n  token: string;\n}) {\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  // react doesn\'t like other scripts controlling the DOM,\n  // we create an empty div and inject things via js\n  // note: when component unmounts, we\'re clearing the div\n  // so react doesn\'t get confused and break things\n  useEffect(() => {\n    if (rootRef.current) {\n      rootRef.current.innerHTML = "";\n      const widget = document.createElement("c2c-widget");\n\n      widget.setAttribute("buttonId", buttonId);\n      widget.setAttribute(\n        "callDetails",\n        JSON.stringify({\n          destination,\n          supportsVideo,\n          supportsAudio,\n        })\n      );\n      widget.setAttribute("token", token);\n      rootRef.current.appendChild(widget);\n    }\n    return () => {\n      if (rootRef.current) {\n        rootRef.current.innerHTML = "";\n      }\n    };\n  }, [buttonId, destination, supportsVideo, supportsAudio]);\n\n  return <BrowserOnly>{() => <div ref={rootRef} />}</BrowserOnly>;\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Of course, you need to have a different component which creates a button with the ",(0,o.jsx)(t.code,{children:"buttonId"})," attribute. Eg:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import BrowserOnly from "@docusaurus/BrowserOnly";\nimport C2CWidgetInternal from "./C2CWidgetInternal";\nimport useIsBrowser from "@docusaurus/useIsBrowser";\nimport { useState } from "react";\n\nexport default function C2CWidget({\n  destination,\n  supportsVideo,\n  supportsAudio,\n  token,\n  children,\n}: {\n  destination: string;\n  supportsVideo: boolean;\n  supportsAudio: boolean;\n  token: string;\n  children: React.ReactNode;\n}) {\n  const isBrowser = useIsBrowser();\n  const [randomId, setRandomId] = useState(\n    Math.random().toString(36).substring(2, 15)\n  );\n  if (!isBrowser) {\n    return null;\n  }\n  return (\n    <BrowserOnly>\n      {() => (\n        <>\n          <button\n            id={`callButton-${randomId}`}\n            className="button button--primary button--lg"\n            style={{\n              margin: "10px 0px",\n            }}\n          >\n            {children}\n          </button>\n          <C2CWidgetInternal\n            buttonId={`callButton-${randomId}`}\n            destination={destination}\n            supportsVideo={supportsVideo}\n            supportsAudio={supportsAudio}\n            token={token}\n          />\n        </>\n      )}\n    </BrowserOnly>\n  );\n}\n\n'})})]})}function p(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}}}]);