"use strict";(self.webpackChunkdoc_for_c_2_c_widget=self.webpackChunkdoc_for_c_2_c_widget||[]).push([[6751],{2392:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>r});var t=n(4848),o=n(8453);const i={},s="V3 Developer notes",a={id:"developer/v3_logs/index",title:"V3 Developer notes",description:"We need to add the following features:",source:"@site/docs/developer/v3_logs/index.mdx",sourceDirName:"developer/v3_logs",slug:"/developer/v3_logs/",permalink:"/call-widget/developer/v3_logs/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Log",permalink:"/call-widget/developer/log"},next:{title:"TODO for v3",permalink:"/call-widget/developer/v3_logs/TODO"}},d={},r=[{value:"New API proposal",id:"new-api-proposal",level:2},{value:"Modal use",id:"modal-use",level:3}];function c(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.h1,{id:"v3-developer-notes",children:"V3 Developer notes"}),"\n",(0,t.jsx)(l.p,{children:"We need to add the following features:"}),"\n",(0,t.jsxs)(l.ol,{children:["\n",(0,t.jsx)(l.li,{children:"subscribe to events from calls and client."}),"\n",(0,t.jsx)(l.li,{children:"modify client and call parameters if dev needs to (eg: dev mode ...)."}),"\n",(0,t.jsx)(l.li,{children:"more flexibility in how the widget is triggered (not just a call button id)."}),"\n",(0,t.jsx)(l.li,{children:"a mode where it doesn't have a modal, just an element that exists within the page."}),"\n",(0,t.jsx)(l.li,{children:"incoming call handling (notification, accept/reject, trigger a call component with that call invite)."}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"Current API for the call widget is lacking in a number of ways:"}),"\n",(0,t.jsxs)(l.ol,{children:["\n",(0,t.jsx)(l.li,{children:"user details collection at start, and survey prompt at the end are hardcoded and inflexible"}),"\n",(0,t.jsx)(l.li,{children:"no proper way to hook into the lifecycle events of the client and the call."}),"\n"]}),"\n",(0,t.jsx)(l.p,{children:"and many more things that stem from not having a flexible API."}),"\n",(0,t.jsx)(l.h2,{id:"new-api-proposal",children:"New API proposal"}),"\n",(0,t.jsx)(l.h3,{id:"modal-use",children:"Modal use"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-html",children:' <call-modal trigger="button-id" open="boolean">\n    <call-context token="string" destination="string" audio="boolean" video="boolean" ... other params>\n        <call-video/>\n        <call-transcript-viewer/>\n    </call-window>\n </call-modal>\n'})}),"\n",(0,t.jsxs)(l.ol,{children:["\n",(0,t.jsxs)(l.li,{children:["the ",(0,t.jsx)(l.code,{children:"<call-modal>"})," is optional. It just shows it's children in a modal context."]}),"\n",(0,t.jsxs)(l.li,{children:["the ",(0,t.jsx)(l.code,{children:"<call-context>"})," is the main component that contains the call logic. It sets up the client and provides\nmethods to dial, hangup etc."]}),"\n",(0,t.jsxs)(l.li,{children:["the ",(0,t.jsx)(l.code,{children:"<call-context>"})," also emits events relating to the call state."]}),"\n",(0,t.jsxs)(l.li,{children:["children of ",(0,t.jsx)(l.code,{children:"<call-context>"})," inherit the client and the call object."]}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,o.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);