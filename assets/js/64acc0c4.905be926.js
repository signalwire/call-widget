"use strict";(self.webpackChunkdoc_for_c_2_c_widget=self.webpackChunkdoc_for_c_2_c_widget||[]).push([[6533],{538:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"Introduction","href":"/call-widget/","docId":"index","unlisted":false},{"type":"category","label":"Development Notes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chat Management","href":"/call-widget/developer/Chat","docId":"developer/Chat","unlisted":false},{"type":"link","label":"Device management","href":"/call-widget/developer/Device","docId":"developer/Device","unlisted":false},{"type":"link","label":"Working with HTML","href":"/call-widget/developer/HTML","docId":"developer/HTML","unlisted":false},{"type":"link","label":"TODO","href":"/call-widget/developer/TODO","docId":"developer/TODO","unlisted":false},{"type":"link","label":"How to update the widget","href":"/call-widget/developer/how_to_update","docId":"developer/how_to_update","unlisted":false},{"type":"link","label":"Log","href":"/call-widget/developer/log","docId":"developer/log","unlisted":false}],"href":"/call-widget/developer/"},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using the C2C Widget with React","href":"/call-widget/usage/with_react","docId":"usage/with_react","unlisted":false},{"type":"link","label":"Using the C2C Widget with Webflow","href":"/call-widget/usage/with_webflow","docId":"usage/with_webflow","unlisted":false}],"href":"/call-widget/usage/"}]},"docs":{"developer/Chat":{"id":"developer/Chat","title":"Chat Management","description":"As of yet, the AI-Human chat live transcription feed is sent with a series of events on the","sidebar":"docSidebar"},"developer/Device":{"id":"developer/Device","title":"Device management","description":"The logic for device management is handled in the Devices class. This class","sidebar":"docSidebar"},"developer/how_to_update":{"id":"developer/how_to_update","title":"How to update the widget","description":"Clone the repo, npm install in the embed-script folder, and npm run build to make sure the widget builds.","sidebar":"docSidebar"},"developer/HTML":{"id":"developer/HTML","title":"Working with HTML","description":"A tagged template with HTML inside can be used to create a JS function that","sidebar":"docSidebar"},"developer/index":{"id":"developer/index","title":"Development Notes","description":"This folder is an assortment of notes and logs for developers working on the C2C widget.","sidebar":"docSidebar"},"developer/log":{"id":"developer/log","title":"Log","description":"07-04-2025","sidebar":"docSidebar"},"developer/TODO":{"id":"developer/TODO","title":"TODO","description":"23 mar","sidebar":"docSidebar"},"index":{"id":"index","title":"Introduction","description":"The C2C widget, short for \\"Click to Call widget\\" is a JavaScript widget which uses the SignalWire SDK and the SignalWire C2C service to","sidebar":"docSidebar"},"usage/index":{"id":"usage/index","title":"Usage","description":"Vite builds the widget into a single js file at location dist/widget.js.","sidebar":"docSidebar"},"usage/with_react":{"id":"usage/with_react","title":"Using the C2C Widget with React","description":"Of course, you need to have a different component which creates a button with the buttonId attribute. Eg:","sidebar":"docSidebar"},"usage/with_webflow":{"id":"usage/with_webflow","title":"Using the C2C Widget with Webflow","description":"Put something like the following at the end of body section in webflow:","sidebar":"docSidebar"}}}}')}}]);