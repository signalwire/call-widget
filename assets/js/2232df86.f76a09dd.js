"use strict";(self.webpackChunkdoc_for_c_2_c_widget=self.webpackChunkdoc_for_c_2_c_widget||[]).push([[8468],{9113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=n(4848),r=n(8453);const o={},a="Working with HTML",s={id:"developer/HTML",title:"Working with HTML",description:"A tagged template with HTML inside can be used to create a JS function that",source:"@site/docs/developer/HTML.mdx",sourceDirName:"developer",slug:"/developer/HTML",permalink:"/call-widget/developer/HTML",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Device management",permalink:"/call-widget/developer/Device"},next:{title:"TODO",permalink:"/call-widget/developer/TODO"}},d={},c=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"working-with-html",children:"Working with HTML"}),"\n",(0,i.jsx)(t.p,{children:"A tagged template with HTML inside can be used to create a JS function that\ncreates the DOM elements for the widget."}),"\n",(0,i.jsx)(t.p,{children:"Consider the following example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",metastring:'title="homepage.html.ts"',children:'import html from "/lib/html"\n\nconst homepage= html`\n  <div name="root">\n    <h1>Current Viewport width</h1>\n    <div name="dynamicContent">\n    </div>\n  </div>\n`\n\nconst {root, dynamicContent} = homepage()\n\ndocument.addEventListener("resize", () => {\n  dynamicContent.innerHTML = `Current Viewport width: ${window.innerWidth}`\n})\n\ndocument.addEventListener("DOMContentLoaded", () => {\n  document.body.appendChild(root)\n})\n'})}),"\n",(0,i.jsx)(t.p,{children:"This is a fairly rudimentary solution and in no way a replacement for automatic reactive systems like React. But\nit does make the HTML more maintainable and easier to grok."}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Also consider installing ",(0,i.jsx)(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=Tobermory.es6-string-html",children:"es6-string-html"}),"\nin VS Code to get syntax highlighting and prettier support for HTML strings inside the html strings."]})}),"\n",(0,i.jsxs)(t.admonition,{type:"danger",children:[(0,i.jsxs)(t.p,{children:["Please note that the html tagged template returns a ",(0,i.jsx)(t.strong,{children:"function"}),". That function creates the DOM elements and returns the named ones.\nIf you directly want the DOM elements:"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'const {root}= html`\n  <div name="root">\n    <h1>Current Viewport width</h1>\n    <div name="dynamicContent">\n    </div>\n  </div>\n`()\n'})}),(0,i.jsxs)(t.p,{children:["Pay extra attention to the ",(0,i.jsx)(t.code,{children:"()"})," at the end of the function call.\nTypescript will catch the error for you, but pay attention nonetheless."]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);