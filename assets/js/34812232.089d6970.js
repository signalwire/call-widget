"use strict";(self.webpackChunkdoc_for_c_2_c_widget=self.webpackChunkdoc_for_c_2_c_widget||[]).push([[8664],{5806:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var l=n(4848),s=n(8453);const a={},r="New API ADR",t={id:"developer/v3_logs/newAPI_ADR",title:"New API ADR",description:"I am changing the API for the v3. Logging decisions and reasons here.",source:"@site/docs/developer/v3_logs/newAPI_ADR.mdx",sourceDirName:"developer/v3_logs",slug:"/developer/v3_logs/newAPI_ADR",permalink:"/call-widget/developer/v3_logs/newAPI_ADR",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"TODO for v3",permalink:"/call-widget/developer/v3_logs/TODO"},next:{title:"Usage",permalink:"/call-widget/usage/"}},d={},c=[{value:"Client params vs Call params",id:"client-params-vs-call-params",level:2},{value:"Client params",id:"client-params",level:3},{value:"dial time params",id:"dial-time-params",level:3}];function o(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.h1,{id:"new-api-adr",children:"New API ADR"}),"\n",(0,l.jsx)(i.p,{children:"I am changing the API for the v3. Logging decisions and reasons here."}),"\n",(0,l.jsxs)(i.ol,{children:["\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"<c2c-widget>"})," is now ",(0,l.jsx)(i.code,{children:"<call-widget>"}),". This allows me to retain compatibility behavior of the old API, and make the\nnew API more flexible"]}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"instead of tracking change for attributes, (codecs, call details etc) we simply pull them at dial."}),"\n"]}),"\n",(0,l.jsxs)(i.li,{children:["\n",(0,l.jsx)(i.p,{children:"in v3, client gets initialized as soon as the widget is connected to the DOM.\nThis is different from v2, where client was initialized before dial.\nThis is to get incoming calls."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(i.h2,{id:"client-params-vs-call-params",children:"Client params vs Call params"}),"\n",(0,l.jsx)(i.p,{children:"Certain params are passed during client init, and other params during dial."}),"\n",(0,l.jsx)(i.h3,{id:"client-params",children:"Client params"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"token"}),"\n",(0,l.jsx)(i.li,{children:"debug options"}),"\n"]}),"\n",(0,l.jsx)(i.h3,{id:"dial-time-params",children:"dial time params"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"destination"}),"\n",(0,l.jsx)(i.li,{children:"supportsAudio"}),"\n",(0,l.jsx)(i.li,{children:"supportsVideo"}),"\n",(0,l.jsx)(i.li,{children:"userVariables"}),"\n",(0,l.jsx)(i.li,{children:"audioCodecs"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);